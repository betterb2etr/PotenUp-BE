package com.ohgiraffers.a_basic;

/*
* 자바의 기본 구조 및 실행 방식
*
* 자바는 클래스를 기반으로 프로그램을 작성하는 객체 지향 프로그래밍 언어
* 모든 자바 프로그램은 클래스 안에서 동자갛며, main 메서드가 프로그램의 시작점이 된다.
* 자바의 실행과정
자바 소스 코드 를 작성한다
* 컴파일러를 사용하여 바이트코드로 변환한다.
* jv, -> .class 파일을 실행한다.
* jvm은 바이트 코드를 해석하여 os에서 실행 가능한 기계어로 변환한다.
* 실행 결과를 출력하거나 다른 연산을 수행한다.
*
* //
* 자바의 실행 방식 이해하기
* 자바의 실행 방ㅅ익은 "컴파일 _ 인터프리터" 방식을 사용한다.
* 이는 자바 코드가 먼저 바이트코드로 변환된 후 jvm에 의해 해석 실행되는 것을 의미한다.
* 주요개념:
* 컴파일 compile: .java-> .class로 변환하기 위해 jvm이 고급 언어를 이해하기 위함.
* 바이트코드 Bytecode: jvm에서 실행가능한 중간 코드
* jvm : 바이트코드를 OS에 맞는 기계어로 전환
* jit compiler : 실행 중 바이트 코드를 네이티브 코드로 변환하여 성능 향상.
* * */
public class Main {
    public static void main(String[] args){
        System.out.println("hello world");
    }

}
